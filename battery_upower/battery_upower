#!/usr/bin/env sh

command -v upower >/dev/null 2>&1 || { echo >&2 "battery_upower: command 'upower' not found, aborting"; exit 1; }


OUTPUT_FORMAT="I3_CHARGE% I3_STATE"

if [ -n "$BLOCK_INSTANCE" ]; then
  DEVICE_NAME="$BLOCK_INSTANCE"
else
  DEVICE_NAME='battery_BAT0'
fi

LOW_THRESHOLD=40
URGENT_COLOR=#FFAE00

STATE_CHR=CHR
STATE_DIS=DIS
STATE_FULL=FULL

# todo: write help
while getopts o:n:t:u:c:d:f: opt; do
    case "$opt" in
        o) OUTPUT_FORMAT="$OPTARG" ;;
        n) DEVICE_NAME="$OPTARG" ;;
        t) LOW_THRESHOLD="$OPTARG" ;;
        u) URGENT_COLOR="$OPTARG" ;;
        c) STATE_CHR="$OPTARG" ;;
        d) STATE_DIS="$OPTARG" ;;
        f) STATE_FULL="$OPTARG" ;;
    esac
done


device_path="/org/freedesktop/UPower/devices/$DEVICE_NAME"
percentage=$(upower -i "$device_path" | grep percentage | awk '{print $2}' | sed 's/.$//')
state=$(upower -i "$device_path" | grep state | awk '{print $2}')

if [ -z "$percentage" ]; then
  echo >&2 "battery_upower: percentage value for $device_path not found, aborting"
  exit 1
fi

case "$state" in
  charging|pending-charge)
    state_name="$STATE_CHR"
    ;;
  discharging|pending-discharge|empty)
    state_name="$STATE_DIS"
    ;;
  fully-charged)
    state_name="$STATE_FULL"
    ;;
esac


printf "%s\n" "$OUTPUT_FORMAT"  |sed "s/I3_CHARGE/$percentage/g" |sed "s/I3_STATE/$state_name/g"
printf "\n"

if [ "$state" = discharging ] && [ "$percentage" -lt "$LOW_THRESHOLD" ]; then
  echo "$URGENT_COLOR"
fi
